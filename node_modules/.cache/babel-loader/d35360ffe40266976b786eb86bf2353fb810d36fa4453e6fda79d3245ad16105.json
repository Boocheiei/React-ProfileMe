{"ast":null,"code":"var _jsxFileName = \"/Users/booch/Documents/GitHub/React-ProfileMe/src/components/main/main.js\";\nimport '../../assets/css/main.css';\nimport React from 'react';\nimport Apptwo from './Apptwo';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass TextScramble {\n  constructor(el) {\n    this.el = el;\n    this.chars = '!<>-_\\\\/[]{}—=+*^?#________';\n    this.update = this.update.bind(this);\n  }\n  setText(newText) {\n    const oldText = this.el.innerText;\n    const length = Math.max(oldText.length, newText.length);\n    const promise = new Promise(resolve => this.resolve = resolve);\n    this.queue = [];\n    for (let i = 0; i < length; i++) {\n      const from = oldText[i] || '';\n      const to = newText[i] || '';\n      const start = Math.floor(Math.random() * 40);\n      const end = start + Math.floor(Math.random() * 40);\n      this.queue.push({\n        from,\n        to,\n        start,\n        end\n      });\n    }\n    cancelAnimationFrame(this.frameRequest);\n    this.frame = 0;\n    this.update();\n    return promise;\n  }\n  update() {\n    let output = '';\n    let complete = 0;\n    for (let i = 0, n = this.queue.length; i < n; i++) {\n      let {\n        from,\n        to,\n        start,\n        end,\n        char\n      } = this.queue[i];\n      if (this.frame >= end) {\n        complete++;\n        output += to;\n      } else if (this.frame >= start) {\n        if (!char || Math.random() < 0.28) {\n          char = this.randomChar();\n          this.queue[i].char = char;\n        }\n        output += `<span class=\"dud\">${char}</span>`;\n      } else {\n        output += from;\n      }\n    }\n    this.el.innerHTML = output;\n    if (complete === this.queue.length) {\n      this.resolve();\n    } else {\n      this.frameRequest = requestAnimationFrame(this.update);\n      this.frame++;\n    }\n  }\n  randomChar() {\n    return this.chars[Math.floor(Math.random() * this.chars.length)];\n  }\n}\n\n// ——————————————————————————————————————————————————\n// Example\n// ——————————————————————————————————————————————————\n\nconst phrases = ['Neo,', 'sooner or later', 'you\\'re going to realize', 'just as I did', 'that there\\'s a difference', 'between knowing the path', 'and walking the path'];\nconst el = document.querySelector('.text');\nconst fx = new TextScramble(el);\nlet counter = 0;\nconst next = () => {\n  fx.setText(phrases[counter]).then(() => {\n    setTimeout(next, 800);\n  });\n  counter = (counter + 1) % phrases.length;\n};\nnext();\nfunction Main() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid-main\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid-main-item1\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Apptwo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 22\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }, this);\n}\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","Apptwo","jsxDEV","_jsxDEV","TextScramble","constructor","el","chars","update","bind","setText","newText","oldText","innerText","length","Math","max","promise","Promise","resolve","queue","i","from","to","start","floor","random","end","push","cancelAnimationFrame","frameRequest","frame","output","complete","n","char","randomChar","innerHTML","requestAnimationFrame","phrases","document","querySelector","fx","counter","next","then","setTimeout","Main","children","className","class","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/booch/Documents/GitHub/React-ProfileMe/src/components/main/main.js"],"sourcesContent":["import '../../assets/css/main.css';\nimport React from 'react';\nimport Apptwo from './Apptwo';\n\nclass TextScramble {\n    constructor(el) {\n      this.el = el\n      this.chars = '!<>-_\\\\/[]{}—=+*^?#________'\n      this.update = this.update.bind(this)\n    }\n    setText(newText) {\n      const oldText = this.el.innerText\n      const length = Math.max(oldText.length, newText.length)\n      const promise = new Promise((resolve) => this.resolve = resolve)\n      this.queue = []\n      for (let i = 0; i < length; i++) {\n        const from = oldText[i] || ''\n        const to = newText[i] || ''\n        const start = Math.floor(Math.random() * 40)\n        const end = start + Math.floor(Math.random() * 40)\n        this.queue.push({ from, to, start, end })\n      }\n      cancelAnimationFrame(this.frameRequest)\n      this.frame = 0\n      this.update()\n      return promise\n    }\n    update() {\n      let output = ''\n      let complete = 0\n      for (let i = 0, n = this.queue.length; i < n; i++) {\n        let { from, to, start, end, char } = this.queue[i]\n        if (this.frame >= end) {\n          complete++\n          output += to\n        } else if (this.frame >= start) {\n          if (!char || Math.random() < 0.28) {\n            char = this.randomChar()\n            this.queue[i].char = char\n          }\n          output += `<span class=\"dud\">${char}</span>`\n        } else {\n          output += from\n        }\n      }\n      this.el.innerHTML = output\n      if (complete === this.queue.length) {\n        this.resolve()\n      } else {\n        this.frameRequest = requestAnimationFrame(this.update)\n        this.frame++\n      }\n    }\n    randomChar() {\n      return this.chars[Math.floor(Math.random() * this.chars.length)]\n    }\n  }\n  \n  // ——————————————————————————————————————————————————\n  // Example\n  // ——————————————————————————————————————————————————\n  \n  const phrases = [\n    'Neo,',\n    'sooner or later',\n    'you\\'re going to realize',\n    'just as I did',\n    'that there\\'s a difference',\n    'between knowing the path',\n    'and walking the path'\n  ]\n  \n  const el = document.querySelector('.text')\n  const fx = new TextScramble(el)\n  \n  let counter = 0\n  const next = () => {\n    fx.setText(phrases[counter]).then(() => {\n      setTimeout(next, 800)\n    })\n    counter = (counter + 1) % phrases.length\n  }\n  \n  next()\n\nfunction Main() {\n    return (\n        <div>\n            <div className=\"grid-main\">\n                <div className='grid-main-item1'>\n                    <div class=\"container\">\n                        <div class=\"text\"></div>\n                    </div>\n                </div>\n                <div><Apptwo />\n                </div>\n            </div>\n        </div>\n    );\n}\nexport default Main;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}